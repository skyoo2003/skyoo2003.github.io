<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ansible on Devlog in the SKY</title>
    <link>https://skyoo2003.github.io/tags/ansible/</link>
    <description>Recent content in ansible on Devlog in the SKY</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Sung-Kyu Yoo</copyright>
    <lastBuildDate>Tue, 14 Nov 2017 21:44:56 +0900</lastBuildDate><atom:link href="https://skyoo2003.github.io/tags/ansible/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ansible Callback Plugin 소개</title>
      <link>https://skyoo2003.github.io/post/2017/11/14/2017-11-14-introduction-to-ansible-callback-plugin/</link>
      <pubDate>Tue, 14 Nov 2017 21:44:56 +0900</pubDate>
      
      <guid>https://skyoo2003.github.io/post/2017/11/14/2017-11-14-introduction-to-ansible-callback-plugin/</guid>
      <description>Ansible Plugin 중에서 Callback Plugin 에 관련한 부분만 정리합니다. Callback Plugin 은 Ansible 에서 특정 이벤트 발생 시 데이터를 로깅한다거나 Slack, Mail 등의 외부 채널로 Write 하는 등의 다양한 목적을 달성하기 위해 사용하는 모듈입니다. 참고로 이 내용은 Ansible 2.2.1.0 기준으로 작성되었습니다.
소개 Ansible Callback Plugin 은 Ansible 의 각종 이벤트를 Hooking 해서 해당 시점에 원하는 로직을 수행할 수 있는 플러그인을 말합니다. 이 콜백 플러그인은 Ansible Task, Playbook 등에 대해 &amp;ldquo;실행 직전&amp;rdquo;, &amp;ldquo;실행 종료&amp;rdquo; 등의 이벤트에 대한 콜백 함수를 정의할 수 있도록 지원합니다.</description>
    </item>
    
    <item>
      <title>Ansible Module 개발하기</title>
      <link>https://skyoo2003.github.io/post/2017/11/14/2017-11-14-ansible-module-develop/</link>
      <pubDate>Tue, 14 Nov 2017 21:44:56 +0900</pubDate>
      
      <guid>https://skyoo2003.github.io/post/2017/11/14/2017-11-14-ansible-module-develop/</guid>
      <description>Ansible 은 대규모의 서버 장비에 대한 설치 및 어플리케이션의 배포와 서비스 운영에 대한 자동화 부분을 비교적 쉽게 작성할 수 있도록 기능을 제공합니다. 최신 트렌드인 DevOps 를 가능케하는 방법 중에 하나라고 할 수 있습니다.
 Ansible 은 SSH 를 기반으로 수행되며, 원격 장비의 SSH 접근 권한이 필요합니다. 별도의 데몬이나 에이전트는 필요하지 않습니다. 원격 장비 (기본 제공되는 Ansible Module 의 경우) Python-2.6 이상만 시스템에 설치가 되어 있으면 됩니다. (일부 모듈은 별도의 파이썬 모듈을 필요로 하는 경우도 있습니다.</description>
    </item>
    
    <item>
      <title>Ansible Galaxy, Git 저장소를 활용하여 Role 의존성 관리하기!</title>
      <link>https://skyoo2003.github.io/post/2017/02/16/2017-02-16-ansible-galaxy-mng-dep-from-git-repo/</link>
      <pubDate>Thu, 16 Feb 2017 17:31:36 +0900</pubDate>
      
      <guid>https://skyoo2003.github.io/post/2017/02/16/2017-02-16-ansible-galaxy-mng-dep-from-git-repo/</guid>
      <description>Git 저장소에 Ansible Role 올리기 먼저, Ansible Role 을 개발하기 위한 Git repository를 생성한다. 그리고, Ansible Role 초기 프로젝트 구조를 Ansible Galaxy 를 사용하여 생성한다.
 Git repository 를 로컬 머신에 복제한다.  1$ git clone &amp;#34;https://github.com/xxxxx/sample-role.git&amp;#34;  Ansible Role 초기 디렉토리 및 파일 생성한다.  1$ ansible-galaxy init --force sample-role 2- sample-role was created successfully 3 4$ tree sample-role/ 5sample-role/ 6├── README.md 7├── defaults 8│ └── main.yml 9├── files 10├── handlers 11│ └── main.</description>
    </item>
    
  </channel>
</rss>
