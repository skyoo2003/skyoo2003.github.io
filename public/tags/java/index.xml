<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on Devlog in the SKY</title>
    <link>https://skyoo2003.github.io/tags/java/</link>
    <description>Recent content in java on Devlog in the SKY</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Sung-Kyu Yoo</copyright>
    <lastBuildDate>Wed, 09 Nov 2016 18:02:24 +0900</lastBuildDate><atom:link href="https://skyoo2003.github.io/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java 8 람다 표현식 자세히 살펴보기</title>
      <link>https://skyoo2003.github.io/post/2016/11/09/2016-11-09-java8-lambda-expression/</link>
      <pubDate>Wed, 09 Nov 2016 18:02:24 +0900</pubDate>
      
      <guid>https://skyoo2003.github.io/post/2016/11/09/2016-11-09-java8-lambda-expression/</guid>
      <description>2010년도에 &amp;lsquo;Project Lambda&amp;rsquo; 라는 프로젝트로 진행되어 Java 8 에 공식 릴리즈가 되었다. 기존의 Java 언어에 어떻게 함수형 프로그래밍을 녹여내었는지 좀 더 자세히 정리하고자 한다.
함수형 프로그래밍 간략하게 알아보기 자바의 람다식을 소개하기 전에 함수형 프로그래밍에 대해서 간략하게라도 알아볼 필요가 있다. (람다 대수에 근간을 두는 함수형 프로그래밍은 패러다임이고, 람다 표현식은 이를 나타낸다고 볼 수 있기 때문!)
함수형 프로그래밍은 함수의 입력만을 의존하여 출력을 만드는 구조로 외부에 상태를 변경하는 것을 지양하는 패러다임으로 부작용(Side-effect) 발생을 최소화 하는 방법론이라 할 수 있다.</description>
    </item>
    
    <item>
      <title>Java 8 살펴보기</title>
      <link>https://skyoo2003.github.io/post/2016/10/25/2016-10-25-introduction-to-java8/</link>
      <pubDate>Tue, 25 Oct 2016 21:33:00 +0900</pubDate>
      
      <guid>https://skyoo2003.github.io/post/2016/10/25/2016-10-25-introduction-to-java8/</guid>
      <description>Java 8 버전에 추가된 내용들에 대해서 정리하고자 한다. 전반적인 내용을 정리하고자 하였고, 자세하고 세부적인 내용은 관련 링크를 첨부하여 추후에 가능하다면, 해당 부분에 대해서 더 자세히 정리해보고자 한다.
새로운 기능 정리 Lambda Expression (a.k.a Anonymous Method) 자바의 람다 표현식의 근간은 &amp;lsquo;알론소 처치 (Alonzo Church)&amp;lsquo;가 1930년대에 람다 대수를 제안. 함수 정의, 함수 적용, 귀납적 함수를 추상화한 형식 체계! 자세한 사항은 람다 대수 위키 참조.
익명 메소드 생성 문법을 지원한다는 정도로 이해하면 좋을 듯 하다.</description>
    </item>
    
  </channel>
</rss>
